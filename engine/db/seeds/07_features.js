const { BaseStats } = require('../../constants')

exports.seed = function (knex) {
  // Deletes ALL existing entries
  return knex('ranger.features')
    .del()
    .then(function () {
      // Inserts seed entries
      return knex('ranger.features').insert([
        // ranger level up
        {
          name: 'ranger > at creation > pick dagger or throwing knife',
          primary_type: 'LEVEL_GRANT',
          mechanic_class: 'ITEM',
          mechanic_mod: 'PICK',
          value: 1,
        },
        {
          name: 'level up - skill bonus limit per skill',
          primary_type: 'LEVEL_GRANT',
          mechanic_class: 'SKILL',
          mechanic_mod: 'LIMIT',
          value: 2,
        },
        {
          name: 'level up - skill bonus',
          primary_type: 'LEVEL_GRANT',
          mechanic_class: 'SKILL',
          mechanic_mod: 'MODIFIER',
          value: 5,
        },
        {
          name: 'level up - heroic action / spell increase',
          primary_type: 'LEVEL_GRANT',
          mechanic_class: 'HEROIC_ABILITY',
          mechanic_mod: 'MODIFIER',
          value: 1,
        },
        {
          name: 'level up - stat increase',
          primary_type: 'LEVEL_GRANT',
          mechanic_class: 'STAT',
          mechanic_mod: 'MODIFIER',
          value: 1,
        },
        {
          name: 'level up - recruitment bonus',
          primary_type: 'LEVEL_GRANT',
          mechanic_class: 'RECRUITMENT_POINT',
          mechanic_mod: 'MODIFIER',
          value: 10,
        },
        // injuries
        {
          name: 'injuries > toes -> move',
          primary_type: 'INJURY',
          mechanic_class: 'STAT',
          stat_subtype: 'BASE',
          mechanic_mod: 'MODIFIER',
          value: -0.5,
        },
        {
          name: 'injuries > never strong -> health',
          primary_type: 'INJURY',
          mechanic_class: 'STAT',
          stat_subtype: 'BASE',
          mechanic_mod: 'MODIFIER',
          value: -1,
        },
        {
          name: 'injuries > lost finger -> shoot',
          primary_type: 'INJURY',
          mechanic_class: 'STAT',
          stat_subtype: 'BASE',
          mechanic_mod: 'MODIFIER',
          value: -1,
        },
        {
          name: 'injuries > scars -> will',
          primary_type: 'INJURY',
          mechanic_class: 'STAT',
          stat_subtype: 'BASE',
          mechanic_mod: 'MODIFIER',
          value: -1,
        },
        {
          name: 'injuries > leg -> move',
          primary_type: 'INJURY',
          mechanic_class: 'STAT',
          stat_subtype: 'BASE',
          mechanic_mod: 'MODIFIER',
          value: -1,
        },
        {
          name: 'injuries > jaw -> leadership',
          primary_type: 'INJURY',
          mechanic_class: 'STAT',
          stat_subtype: 'BASE',
          mechanic_mod: 'MODIFIER',
          value: -3,
        },
        {
          name: 'injuries > eye -> shoot def',
          primary_type: 'INJURY',
          mechanic_class: 'STAT',
          stat_subtype: 'EXTENDED',
          mechanic_mod: 'MODIFIER',
          value: -1,
        },
        {
          name: 'injuries > arm -> fight',
          primary_type: 'INJURY',
          mechanic_class: 'STAT',
          stat_subtype: 'BASE',
          mechanic_mod: 'MODIFIER',
          value: -1,
        },
        // companion level up features
        {
          name: 'comp level up - health',
          primary_type: 'FRIEND_LEVEL_GRANT',
          mechanic_class: 'STAT',
          mechanic_mod: 'MODIFIER',
          stat_subtype: 'BASE',
          value: 1,
        },
        {
          name: 'comp level up - skill',
          primary_type: 'FRIEND_LEVEL_GRANT',
          mechanic_class: 'SKILL',
          mechanic_mod: 'MODIFIER',
          value: 4,
        },
        {
          name: 'comp level up - will',
          primary_type: 'FRIEND_LEVEL_GRANT',
          mechanic_class: 'STAT',
          stat_subtype: 'BASE',
          mechanic_mod: 'MODIFIER',
          value: 2,
        },
        {
          name: 'comp level up - heroic/spell ability',
          primary_type: 'FRIEND_LEVEL_GRANT',
          mechanic_class: 'HEROIC_ACTION',
          mechanic_mod: 'MODIFIER',
          value: 1,
        },
        {
          name: 'comp level up - choose fight or shoot (shoot)',
          primary_type: 'FRIEND_LEVEL_GRANT',
          mechanic_class: 'STAT',
          stat_subtype: 'BASE',
          mechanic_mod: 'PICK',
          value: 1,
        },
        // equipment
        {
          name: 'equip > dagger > -1 dmg',
          primary_type: 'ITEM',
          mechanic_class: 'STAT',
          stat_subtype: 'EXTENDED',
          mechanic_mod: 'MODIFIER',
          value: -1,
        },
        {
          name: 'equip > 2 hand weapon > +2 dmg',
          primary_type: 'ITEM',
          mechanic_class: 'STAT',
          stat_subtype: 'BASE',
          mechanic_mod: 'MODIFIER',
          value: 1,
        },
        {
          name: 'item > light armor > armor +1',
          primary_type: 'ITEM',
          mechanic_class: 'STAT',
          stat_subtype: 'BASE',
          mechanic_mod: 'MODIFIER',
          value: 1,
        },
        {
          name: 'item > heavy armor > armor +2',
          primary_type: 'ITEM',
          mechanic_class: 'STAT',
          stat_subtype: 'BASE',
          mechanic_mod: 'MODIFIER',
          value: 1,
        },
        {
          name: 'item > heavy armor > move -1',
          primary_type: 'ITEM',
          mechanic_class: 'STAT',
          stat_subtype: 'BASE',
          mechanic_mod: 'MODIFIER',
          value: 1,
        },
        {
          name: 'item > shield > armor +1',
          primary_type: 'ITEM',
          mechanic_class: 'STAT',
          stat_subtype: 'BASE',
          mechanic_mod: 'MODIFIER',
          value: 1,
        },
        {
          name: 'item > shield > no 2-handed weapon',
          primary_type: 'ITEM',
          mechanic_class: 'ITEM',
          mechanic_mod: 'RIDER',
          rider_subtype: 'EXCLUDES',
          value: 1,
        },
        {
          name: 'item > shield > no staff',
          primary_type: 'ITEM',
          mechanic_class: 'ITEM',
          mechanic_mod: 'RIDER',
          rider_subtype: 'EXCLUDES',
          value: 1,
        },
        {
          name: 'item > longbow > requires quiver',
          primary_type: 'ITEM',
          mechanic_class: 'ITEM',
          mechanic_mod: 'RIDER',
          rider_subtype: 'REQUIRES',
          value: 1,
        },
        {
          name: 'item > crossbow > requires quiver',
          primary_type: 'ITEM',
          mechanic_class: 'ITEM',
          mechanic_mod: 'RIDER',
          rider_subtype: 'REQUIRES',
          value: 1,
        },
        {
          name: 'item > crossbow > damage +2',
          primary_type: 'ITEM',
          mechanic_class: 'STAT',
          stat_subtype: 'EXTENDED',
          mechanic_mod: 'MODIFIER',
          value: 2,
        },
        // companion
        {
          name: 'companion > conjurer > pick > spells x2',
          primary_type: 'MERCENARY',
          mechanic_class: 'SPELL',
          mechanic_mod: 'PICK',
          value: 2,
        },
        {
          name: 'companion > conjurer > pick > staff or hand weapon',
          primary_type: 'MERCENARY',
          mechanic_class: 'ITEM',
          mechanic_mod: 'PICK',
          value: 1,
        },
        {
          name: 'companion > archer > pick >crossbow or longbow',
          primary_type: 'MERCENARY',
          mechanic_class: 'ITEM',
          mechanic_mod: 'PICK',
          value: 1,
        },
      ])
    })
}
